rest/spread

operator

- rest
    - appears on the left-hand side of an assignment
    - packs zero or more elems into a single array
    - arr-var must be last elem in a destructing assignment (1)
    - see also entry: function->args
- spread
    - appears on the right-hand side of an assignment
    - unpacks array (2.1) or iterable obj (2.2) into single elems
    - useful to create a shallow copy of an obj (2.3)
         - shallow copy means 1st level is copied, deeper levels are referenced

- SEE ALSO
    - eloquent, p.76f.
    - definitive, ch.6.10.4
    - /exercism/javascript/elyses-destructured-enchantments
    - /exercism/javascript/grade-school (deep copy)

EXAMPLE
(1)
const [a, b, ...rest] = [0, 1, 2, 3]; // rest = [2, 3]

(2.1)
function concat(a, b) {
    return `${a} + ${b}`;
}
concat(...[1, 2, 3]);                 // => 1 + 2
(2.2)
let position = { x: 0, y: 0 };
let dimensions = { width: 100, height: 75 };
let rect = { ...position, ...dimensions };
let res = rect.x + rect.y + rect.width + rect.height; // res = 175
(2.3)
const device = {color: "blue"};
let res = device;
res === device;                       // => true
res = {...device};
res === device;                       // => false
