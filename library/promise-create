promise->creation

definitive, ch.13.2.6

(1) based on another promise
    - given a promise, create a new obj by calling e.g. then() on it
(2) based on synchronous values
    - Promise.resolve() returns a resolved promise
        - single arg: val to be returned
    - Promise.reject() returns a rejected promise
        - single arg: val to be returned
(3) Promise()-constructor
    - one arg: callback with two args
        - 1st arg: callback, by convention, named 'resolve'
        - 2nd arg: callback, by convention, named 'reject'

EXAMPLE
(2)
let p = Promise.resolve(123);
p.then(res => console.log(res)) // 123 done
    .finally(() => console.log("done"));

let p = Promise.reject("error");
p.catch(res => console.error(res)) // error done
    .finally(() => console.log("done"));
(3)
function wait(duration) {
    return new Promise((resolve, reject) => {
        if (duration < 0) reject(new Error("no time travel"));
        setTimeout(resolve, duration);
    });
}
wait(2000)
    .then(r => console.log("Waited for 2 secs."))
    .catch(e => console.log(e));
