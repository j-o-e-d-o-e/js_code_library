generator

defintive, ch. 12.3

since ES6, generator-funcs allow to define iterators
useful when vals to be iterated are not elems of a data structure (like arr), but the result of a computation
allow to pause a computation with 'yield'-keyword and restart it again later with arbitrary input val

EXAMPLE
function* fibonacciSequence() {
    let x = 0, y = 1;
    for (; ;) {
        yield y;
        [x, y] = [y, x + y];
    }
}
function fibonacci(n) {
    for(let f of fibonacciSequence()) {
        if (n-- <= 0) return f;
    }
}
let res = fibonacci(20); // res == 10946
