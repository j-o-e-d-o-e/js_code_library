lib->jest

testing

- install: `npm install --save-dev jest` (for each project)
- run: `npm test`
- methods, e.g.
    - describe(): bundles tests
    - test(): single test
    - expect(): actual result
    - toBe(): expected result
    - toBeCloseTo(): expected result for doubles
    - beforeEach()/afterEach(): before/after each test
- to ignore tests: xtest() instead of test()
    - alternatively, test.skip()
- mocks
    - creation
        - jest.mock() mocks a module
        - jest.fn() creates a mock func
    - methods, e.g.
        - toHaveBeenCalledTimes(): how often called
        - toHaveBeenCalledWith(): called with specified args

- SEE ALSO
    - jestjs.io/docs/getting-started
    - /exercism/javascript/fruit-picker

EXAMPLE
// main.js (to be tested)
const sum = (x, y) => x + y;
module.exports = sum;

// main.test.js (tests)
const sum = require('./main');

describe('sum', () => {
    test('positive integers', () => {
        expect(sum(1, 2)).toBe(3);
    });
    test('positive and negative integer', () => {
        expect(sum(3, -2)).toBe(1);
    });
});
// package.json
{
  "main": "main.js",
  "scripts": {
    "test": "jest"
  },
  "devDependencies": {
    "jest": "^29.5.0"
  }
}
