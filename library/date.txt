date

eloquent, ch.8/definitive, ch.11.4

JS's API for dates and times
Date()-constructor
    - with no arg: returns current date and time
    - one numeric arg: interprets it as a timestamp
        - negative num for time before 1970 supported
    - two or more args: as year, month, day-of-month, hour min, sec, millisec in your local time zone
    - month starts at zero (e.g. December is 11); yet, day-of-month starts at one
    - if time fields omitted, defaults all to 0 (midnight)
    - if string is passed, constructor will attempt to parse that string as date and time
if you console.log() a date, it will by default be printed in your local time zone
getDate() returns the day-of-month
getDay() returns the day-of-week (0 for Sunday through 6 for Saturday)
getTime() returns the date's timestamp
Date.now() returns the current time as a timestamp
Date setting-methods work correctly even when they overflow
    - e.g. setMonth()  handles this by incrementing the year as needed

EXAMPLE
const d = new Date(1982, 0, 3);
console.log(d.toString()); // => Sun Jan 03 1982 00:00:00
console.log(d.toUTCString()); // => 1982-01-02T23:00:00.000Z
const age = new Date() - d; // diff in millisecs
console.log(`${Math.round(age / (1000 * 60 * 60 * 24))} days old`);
const e = new Date();
e.setDate(e.getDate() + 7);
console.log(`Next week is: ${e}`)
