regex

eloquent, ch.9

describe patterns in strings
two ways to construct
    - new RegExp("abc")
    - /[123]/

[0-9]: match all strings that contain a digit (hypen indicates range)
[^01]: match any character except the ones in the set (1)

/\d+/: matches one or more digit characters ('+' indicates element may be repeated)
/\d*/: like +, but allows the pattern to match zero times

/abc/	        A sequence of characters
/[abc]/	        Any character from a set of characters
/[^abc]/        Any character not in a set of characters
/[0-9]/	        Any character in a range of characters
/x+/	        One or more occurrences of the pattern x
/x+?/	        One or more occurrences, nongreedy
/x*/	        Zero or more occurrences
/x?/	        Zero or one occurrence
/x{2,4}/        Two to four occurrences
/(abc)/	        A group
/a|b|c/	        Any one of several patterns
/\d/	        Any digit character
/\w/	        An alphanumeric character (“word character”)
/\s/	        Any whitespace character
/./             Any character except newlines
/\b/            A word boundary
/^/             Start of input
/$/             End of input

/b: word boundary
    - can be the start or end of the string or
    - any point in the string that has a word character (as in \w) on one side and a nonword character on the other

test() tells only whether regex matched and nothing else
exec() return null if no match and returns an object otherwise

EXAMPLE
(1)
let notBinary = /[^01]/;
console.log(notBinary.test("1100100010100110")); // → false
console.log(notBinary.test("1100100010200110")); // → true
(2)
let dateTime = /\d{1,2}-\d{1,2}-\d{4} \d{1,2}:\d{2}/;
console.log(dateTime.test("1-30-2003 8:45")); // → true
(3)
let cartoonCrying = /boo+(hoo+)+/i;
console.log(cartoonCrying.exec("Boohoooohoohooo")); // → [object]
(4)
let animalCount = /\b\d+ (pig|cow|chicken)s?\b/;
console.log(animalCount.test("15 pigs")); // → true
console.log(animalCount.test("15 pigchickens")); // → false

// looping over matches
let input = "A string with 3 numbers in it... 42 and 88.";
let number = /\b\d+\b/g;
let match;
while (match = number.exec(input)) {
  console.log("Found", match[0], "at", match.index);
}
// → Found 3 at 14
// → Found 42 at 33
// → Found 88 at 40

// string values have match(), as well
console.log("one two 100".match(/\d+/)); // → ["100"]
