string



- list/array of chars
    - accessible via array-notation
    - like array, deleting elems does not affect length-property (1)
- concatenation via addition-operator
- like nums, can be compared by using comparison-operators
    - according to dictionary (lexicographical) order
    - exact order of all chars, see: fileformat.info/info/charset/UTF-16/list.htm
- methods (2), e.g.
    - includes() checks whether another string is part of it
    - startsWith()/endsWith()
    - substring()/slice() return substring with the elems between start (incl) and end (excl)
        - what they have in common
            - if start === end, returns and empty string
            - if end is omitted, extracts chars to the end of string
            - if either arg is greater than string's length, length will be used instead
        - slight distinctions, e.g. if start > end
            - substring() swaps those 2 args
            - slice() returns empty string

EXAMPLE
(1)
let word = " joe\t";
let str = word.trim();
console.log(word.length);   // 5
console.log(str.length);    // 3
(2)
"joe"[0];               // j
"joe".length;           // 3
'joe'.endsWith("e");    // true
"joe".slice(1);         // oe
