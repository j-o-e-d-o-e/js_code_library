error



- constructor Error()
    - single arg: val of message (optional)
    - 'new' may be omitted
- two properties: message and name (1)
    - if created with Error(), name is always "Error"
    - additionally, modern browsers and nodeJS define a property 'stack'
        - its val is a multi-line-string that contains the strack trace
- 'throw' to throw an error (2)
    - current execution is stopped and resumes in 1st catch-block of the call-stack
- subclasses of Error
    - e.g. SyntaxError, ReferenceError
    - create own error-class by inheriting from Error (3)

- SEE ALSO
    - definitive, ch.11.5
    - /exercism/javascript/factory-sensors

EXAMPLE
(1)
const error = new Error('Something went wrong');
console.log(error.message); // "Something went wrong"
(2)
throw Error('Something went wrong');
(3)
class CustomError extends Error {}

try {
  // code that may throw an error
} catch (error) {
  if (error instanceof CustomError) {
    console.log('The error thrown is an instance of CustomError');
  }
}
