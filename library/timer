timer

async

- funcs to register callbacks to run async
    (1) setTimeout() invokes func once after period of time
        - 1st: callback
        - 2nd: how many millisecs should elapse before func is invoked
            - if omitted, if defaults to 0 ("as soon as possible")
            - to cancel, pass val to clearTimeout()
    (2) setInterval() invokes func repeatedly
        - args: like setTimeout()
        - returns val to cancel invocation
            - in browser, typically a num
            - in node, an obj
            - to cancel, pass val to clearInterval()

- SEE ALSO
    - definitive, ch.11.10

EXAMPLE
let clock = setInterval(() => {
    console.clear();
    console.log(new Date().toLocaleTimeString());
}, 1000);
// After 5 seconds: stop the repeating code above.
setTimeout(() => { clearInterval(clock); }, 5000);
