Array->creation



- five ways to create arr
(1) arr literal in square bracktes (most common)
    - comma-separated list of elems
(2) spread operator on an iterable obj
    - to create a shallow copy of an array (1st level is copied, deeper levels are referenced)
    - since ES6
    - see entry: spread
(3) Array() constructor
    - can be called with or without 'new'
    - without args: creates an empty array
    - single numeric arg: specifies its length, but no vals are stored
        - combined with fill(), returns arr with default vals (see entry: array->methods)
    - more args: creates arr with given elems
(4) Array.of() factory method
    - creates arr with passed args as elems
    - unlike (3), also creation of arr with only one elem possible
    - since ES6
(5) Array.from() factory
    - expects an iterable of array-like obj and returns new array with those elements
    - similar to spread operator
    - accepts an optional 2nd arg, e.g. a mapping func
    - since ES6

- SEE ALSO
    - definitve, ch.7

EXAMPLE
(1)
let misc = [1.1, true, "a", {x: 1, y: 2}];

(2)
let original = [1, 2, 3];
let copy = [...original];
copy[0] = 0;
console.log(original);      // => [ 1, 2, 3 ]
console.log(copy);          // => [ 0, 2, 3 ]

(3)
Array(5).fill(0);           // [ 0, 0, 0, 0, 0 ]

(4)
console.log(Array.of(10));  // => [10]

(5)
let copy = Array.from(original);
