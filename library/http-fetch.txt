http->fetch()

definitive, ch. 15.11.1

Promise-based API for making HTTP requests in browser
for node, import required: const fetch = require('node-fetch')

fetch()
  - 1st arg: URL
    - alternatively, new Request() with 1st and 2nd arg
  - 2nd arg: Options obj (optional), e.g.
    - Header: {headers: new Headers({"Content-Type":"application/json"})}
    - POST: {method: "POST", body: "content"}
  - returns Promise which resolves to Response obj with props, e.g.
    - status: HTTP status code
    - ok: true, if status === 200
    - bodyUsed: true, if body-stream (Readable stream obj) has already been read

typically, two then()-calls
  - 1st: ask for the body of the response and return Promise
    - json() for body with content-type json
    - text() for body with content-type text
  - 2nd: process the content of the body

EXAMPLE
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title></title>
  </head>
  <body>
    <p> Fetch results:</p>
    <p id="content"></p>
  </body>
  <script type="text/javascript">
    fetch('https://traffic-tracker.herokuapp.com/api/years/current')
    .then(resp => {
      if (resp.ok) return resp.json();
    })
    .then(content => {
      let res = `In ${content.year}, ${content.total} flights in total, so far.`;
      document.body.innerHTML += res;
    })
    .catch(err => {
      console.log("Error while fetching")
    });
  </script>
</html>
